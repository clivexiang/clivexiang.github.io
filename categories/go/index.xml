<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>go on clive xiang 的博客</title>
    <link>http://localhost:1313/categories/go/</link>
    <description>Recent content in go on clive xiang 的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 20 Oct 2020 20:10:12 +0800</lastBuildDate>
    
	<atom:link href="http://localhost:1313/categories/go/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Go Defer</title>
      <link>http://localhost:1313/post/go/go-defer/</link>
      <pubDate>Tue, 20 Oct 2020 20:10:12 +0800</pubDate>
      
      <guid>http://localhost:1313/post/go/go-defer/</guid>
      <description>defer 语句会将函数推迟到外层函数返回之后执行。 推迟调用的函数其参数会立即求值，但直到外层函数返回前该函数都不会被调用。 defer.go package main import &amp;quot;fmt&amp;quot; func main() { defer fmt.Println(&amp;quot;world&amp;quot;) fmt.Println(&amp;quot;hello&amp;quot;) } defer</description>
    </item>
    
    <item>
      <title>Go For</title>
      <link>http://localhost:1313/post/go/go-for/</link>
      <pubDate>Tue, 20 Oct 2020 20:04:12 +0800</pubDate>
      
      <guid>http://localhost:1313/post/go/go-for/</guid>
      <description>Go 只有一种循环结构：for 循环。 基本的 for 循环由三部分组成，它们用分号隔开： 初始化语句：在第一次迭代前执行 条件表达式：在每次迭代前求值 后置语句</description>
    </item>
    
    <item>
      <title>Go if</title>
      <link>http://localhost:1313/post/go/go-if/</link>
      <pubDate>Tue, 20 Oct 2020 20:04:12 +0800</pubDate>
      
      <guid>http://localhost:1313/post/go/go-if/</guid>
      <description>Go 的 if 语句与 for 循环类似，表达式外无需小括号 ( ) ，而大括号 { } 则是必须的。 if.go package main import ( &amp;quot;fmt&amp;quot; &amp;quot;math&amp;quot; ) func sqrt(x float64) string { if x &amp;lt; 0 { return sqrt(-x) + &amp;quot;i&amp;quot; } return fmt.Sprint(math.Sqrt(x)) } func main() { fmt.Println(sqrt(2), sqrt(-4)) } if 的</description>
    </item>
    
    <item>
      <title>Go Pakage</title>
      <link>http://localhost:1313/post/go/go-pakage/</link>
      <pubDate>Tue, 20 Oct 2020 20:04:12 +0800</pubDate>
      
      <guid>http://localhost:1313/post/go/go-pakage/</guid>
      <description>每个 Go 程序都是由包构成的。 程序从 main 包开始运行。 本程序通过导入路径 &amp;ldquo;fmt&amp;rdquo; 和 &amp;ldquo;math/rand&amp;rdquo; 来使用这两个包。 按照约定，包名与导入路径的最后一个元素一致。例如，&amp;l</description>
    </item>
    
    <item>
      <title>Go switch</title>
      <link>http://localhost:1313/post/go/go-switch/</link>
      <pubDate>Tue, 20 Oct 2020 20:04:12 +0800</pubDate>
      
      <guid>http://localhost:1313/post/go/go-switch/</guid>
      <description>switch 的求值顺序 switch 的 case 语句从上到下顺次执行，直到匹配成功时停止。 （例如， switch i { case 0: case f(): } 在 i==0 时 f 不会被调用。） switch-evaluation-order.go package main import ( &amp;quot;fmt&amp;quot; &amp;quot;time&amp;quot; ) func main() { fmt.Println(&amp;quot;When&#39;s Saturday?&amp;quot;) today := time.Now().Weekday() switch</description>
    </item>
    
    <item>
      <title>Go 基本数据类型 变量</title>
      <link>http://localhost:1313/post/go/go-type/</link>
      <pubDate>Tue, 20 Oct 2020 20:04:12 +0800</pubDate>
      
      <guid>http://localhost:1313/post/go/go-type/</guid>
      <description>变量 var 语句用于声明一个变量列表，跟函数的参数列表一样，类型在最后。 就像在这个例子中看到的一样，var 语句可以出现在包或函数级别。 variables.go package main import &amp;quot;fmt&amp;quot; var</description>
    </item>
    
  </channel>
</rss>